const GinkoError = require('../Util/GinkoError')

module.exports = {
        obtenerUsuario(client,usu){
        let find1 =  client.users.get(usu)
        if(!find1){
         let find2 = client.users.find(u => u.username == usu)
         if(!find2){
         let find3 = client.users.find(u => `${u.username}#${u.discriminator}` == usu)
         if(!find3) return false
         else return find3
         }else return find2
        }else return find1
     },
        obtenerMiembro(guild,usu){
        let find1 =  guild.members.get(usu)
        if(!find1){
         let find2 = guild.members.find(u => u.user.username == usu)
         if(!find2){
         let find3 = guild.members.find(u => `${u.user.username}#${u.user.discriminator}` == usu)
         if(!find3) return false
         else return find3
         }else return find2
        }else return find1
     },
        async pedirRespuesta(canal, user, tiempo , si , no) {
        if(!canal || !user || !tiempo || !si || !no) throw new GinkoError("Todos los parametros de la funciÃ³n pedirRespuesta son obligatorios")
        const verify = await canal.awaitMessages(res => {
                const value = res.content.toLowerCase();
                return res.author.id === user.id && (si.includes(value) || no.includes(value));
        },{
                max: 1,
                time: tiempo
        });
        if (!verify.size) return 0;
        const choice = verify.first().content.toLowerCase();
        if (si.includes(choice)) return true;
        if (no.includes(choice)) return false;
        return false;
}

}